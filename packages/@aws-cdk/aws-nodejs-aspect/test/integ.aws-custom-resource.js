"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const integ_tests_alpha_1 = require("@aws-cdk/integ-tests-alpha");
const aws_cdk_lib_1 = require("aws-cdk-lib");
const aws_ssm_1 = require("aws-cdk-lib/aws-ssm");
const custom_resources_1 = require("aws-cdk-lib/custom-resources");
const customAspect = require("../lib/nodejs-aspect");
const aws_lambda_1 = require("aws-cdk-lib/aws-lambda");
const app = new aws_cdk_lib_1.App();
class CreateParameterStack extends aws_cdk_lib_1.Stack {
    constructor(scope, id, props = {}) {
        super(scope, id, props);
        const parameter = new aws_ssm_1.StringParameter(this, 'Secret', {
            parameterName: 'Password',
            stringValue: 'ThisIsMyPassword',
        });
        this.parameterName = parameter.parameterName;
    }
}
class GetParameterStack extends aws_cdk_lib_1.Stack {
    constructor(scope, id, props) {
        super(scope, id, props);
        const getSecret = new custom_resources_1.AwsCustomResource(this, 'GetSecret', {
            onUpdate: {
                service: 'SSM',
                action: 'GetParameter',
                parameters: {
                    Name: props.parameterName,
                    WithDecryption: true,
                },
                physicalResourceId: custom_resources_1.PhysicalResourceId.of(props.parameterName),
                logging: custom_resources_1.Logging.withDataHidden(),
            },
            policy: custom_resources_1.AwsCustomResourcePolicy.fromSdkCalls({
                resources: custom_resources_1.AwsCustomResourcePolicy.ANY_RESOURCE,
            }),
        });
        const value = getSecret.getResponseField('Parameter.Value');
        new aws_cdk_lib_1.CfnOutput(this, 'RevealSecret', { value });
    }
}
const createParameterStack = new CreateParameterStack(app, 'CreateParameterStack');
const getParameterStack = new GetParameterStack(app, 'GetParameterStack', {
    parameterName: createParameterStack.parameterName,
});
getParameterStack.addDependency(createParameterStack);
aws_cdk_lib_1.Aspects.of(getParameterStack).add(customAspect.NodeJsAspect.modifyRuntimeTo(aws_lambda_1.Runtime.NODEJS_20_X));
new integ_tests_alpha_1.IntegTest(app, 'AwsCustomResourceSsmInteg', {
    testCases: [createParameterStack, getParameterStack],
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZWcuYXdzLWN1c3RvbS1yZXNvdXJjZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImludGVnLmF3cy1jdXN0b20tcmVzb3VyY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxrRUFBdUQ7QUFDdkQsNkNBQXlFO0FBQ3pFLGlEQUFzRDtBQUN0RCxtRUFBdUg7QUFFdkgscURBQXFEO0FBQ3JELHVEQUFpRDtBQUVqRCxNQUFNLEdBQUcsR0FBRyxJQUFJLGlCQUFHLEVBQUUsQ0FBQztBQUV0QixNQUFNLG9CQUFxQixTQUFRLG1CQUFLO0lBR3RDLFlBQW1CLEtBQWdCLEVBQUUsRUFBVSxFQUFFLFFBQW9CLEVBQUU7UUFDckUsS0FBSyxDQUFDLEtBQUssRUFBRSxFQUFFLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFFeEIsTUFBTSxTQUFTLEdBQUcsSUFBSSx5QkFBZSxDQUFDLElBQUksRUFBRSxRQUFRLEVBQUU7WUFDcEQsYUFBYSxFQUFFLFVBQVU7WUFDekIsV0FBVyxFQUFFLGtCQUFrQjtTQUNoQyxDQUFDLENBQUM7UUFFSCxJQUFJLENBQUMsYUFBYSxHQUFHLFNBQVMsQ0FBQyxhQUFhLENBQUM7S0FDOUM7Q0FDRjtBQU1ELE1BQU0saUJBQWtCLFNBQVEsbUJBQUs7SUFDbkMsWUFBbUIsS0FBZ0IsRUFBRSxFQUFVLEVBQUUsS0FBNkI7UUFDNUUsS0FBSyxDQUFDLEtBQUssRUFBRSxFQUFFLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFFeEIsTUFBTSxTQUFTLEdBQUcsSUFBSSxvQ0FBaUIsQ0FBQyxJQUFJLEVBQUUsV0FBVyxFQUFFO1lBQ3pELFFBQVEsRUFBRTtnQkFDUixPQUFPLEVBQUUsS0FBSztnQkFDZCxNQUFNLEVBQUUsY0FBYztnQkFDdEIsVUFBVSxFQUFFO29CQUNWLElBQUksRUFBRSxLQUFLLENBQUMsYUFBYTtvQkFDekIsY0FBYyxFQUFFLElBQUk7aUJBQ3JCO2dCQUNELGtCQUFrQixFQUFFLHFDQUFrQixDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsYUFBYSxDQUFDO2dCQUM5RCxPQUFPLEVBQUUsMEJBQU8sQ0FBQyxjQUFjLEVBQUU7YUFDbEM7WUFDRCxNQUFNLEVBQUUsMENBQXVCLENBQUMsWUFBWSxDQUFDO2dCQUMzQyxTQUFTLEVBQUUsMENBQXVCLENBQUMsWUFBWTthQUNoRCxDQUFDO1NBQ0gsQ0FBQyxDQUFDO1FBRUgsTUFBTSxLQUFLLEdBQUcsU0FBUyxDQUFDLGdCQUFnQixDQUFDLGlCQUFpQixDQUFDLENBQUM7UUFDNUQsSUFBSSx1QkFBUyxDQUFDLElBQUksRUFBRSxjQUFjLEVBQUUsRUFBRSxLQUFLLEVBQUUsQ0FBQyxDQUFDO0tBQ2hEO0NBQ0Y7QUFFRCxNQUFNLG9CQUFvQixHQUFHLElBQUksb0JBQW9CLENBQUMsR0FBRyxFQUFFLHNCQUFzQixDQUFDLENBQUM7QUFDbkYsTUFBTSxpQkFBaUIsR0FBRyxJQUFJLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxtQkFBbUIsRUFBRTtJQUN4RSxhQUFhLEVBQUUsb0JBQW9CLENBQUMsYUFBYTtDQUNsRCxDQUFDLENBQUM7QUFFSCxpQkFBaUIsQ0FBQyxhQUFhLENBQUMsb0JBQW9CLENBQUMsQ0FBQztBQUN0RCxxQkFBTyxDQUFDLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsWUFBWSxDQUFDLGVBQWUsQ0FBQyxvQkFBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUM7QUFDbEcsSUFBSSw2QkFBUyxDQUFDLEdBQUcsRUFBRSwyQkFBMkIsRUFBRTtJQUM5QyxTQUFTLEVBQUUsQ0FBQyxvQkFBb0IsRUFBRSxpQkFBaUIsQ0FBQztDQUNyRCxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbnRlZ1Rlc3QgfSBmcm9tICdAYXdzLWNkay9pbnRlZy10ZXN0cy1hbHBoYSc7XG5pbXBvcnQgeyBBcHAsIEFzcGVjdHMsIENmbk91dHB1dCwgU3RhY2ssIFN0YWNrUHJvcHMgfSBmcm9tICdhd3MtY2RrLWxpYic7XG5pbXBvcnQgeyBTdHJpbmdQYXJhbWV0ZXIgfSBmcm9tICdhd3MtY2RrLWxpYi9hd3Mtc3NtJztcbmltcG9ydCB7IEF3c0N1c3RvbVJlc291cmNlLCBBd3NDdXN0b21SZXNvdXJjZVBvbGljeSwgTG9nZ2luZywgUGh5c2ljYWxSZXNvdXJjZUlkIH0gZnJvbSAnYXdzLWNkay1saWIvY3VzdG9tLXJlc291cmNlcyc7XG5pbXBvcnQgeyBDb25zdHJ1Y3QgfSBmcm9tICdjb25zdHJ1Y3RzJztcbmltcG9ydCAqIGFzIGN1c3RvbUFzcGVjdCBmcm9tICcuLi9saWIvbm9kZWpzLWFzcGVjdCc7XG5pbXBvcnQgeyBSdW50aW1lIH0gZnJvbSAnYXdzLWNkay1saWIvYXdzLWxhbWJkYSc7XG5cbmNvbnN0IGFwcCA9IG5ldyBBcHAoKTtcblxuY2xhc3MgQ3JlYXRlUGFyYW1ldGVyU3RhY2sgZXh0ZW5kcyBTdGFjayB7XG4gIHB1YmxpYyByZWFkb25seSBwYXJhbWV0ZXJOYW1lOiBzdHJpbmc7XG5cbiAgcHVibGljIGNvbnN0cnVjdG9yKHNjb3BlOiBDb25zdHJ1Y3QsIGlkOiBzdHJpbmcsIHByb3BzOiBTdGFja1Byb3BzID0ge30pIHtcbiAgICBzdXBlcihzY29wZSwgaWQsIHByb3BzKTtcblxuICAgIGNvbnN0IHBhcmFtZXRlciA9IG5ldyBTdHJpbmdQYXJhbWV0ZXIodGhpcywgJ1NlY3JldCcsIHtcbiAgICAgIHBhcmFtZXRlck5hbWU6ICdQYXNzd29yZCcsXG4gICAgICBzdHJpbmdWYWx1ZTogJ1RoaXNJc015UGFzc3dvcmQnLFxuICAgIH0pO1xuXG4gICAgdGhpcy5wYXJhbWV0ZXJOYW1lID0gcGFyYW1ldGVyLnBhcmFtZXRlck5hbWU7XG4gIH1cbn1cblxuaW50ZXJmYWNlIEdldFBhcmFtZXRlclN0YWNrUHJvcHMgZXh0ZW5kcyBTdGFja1Byb3BzIHtcbiAgcmVhZG9ubHkgcGFyYW1ldGVyTmFtZTogc3RyaW5nO1xufVxuXG5jbGFzcyBHZXRQYXJhbWV0ZXJTdGFjayBleHRlbmRzIFN0YWNrIHtcbiAgcHVibGljIGNvbnN0cnVjdG9yKHNjb3BlOiBDb25zdHJ1Y3QsIGlkOiBzdHJpbmcsIHByb3BzOiBHZXRQYXJhbWV0ZXJTdGFja1Byb3BzKSB7XG4gICAgc3VwZXIoc2NvcGUsIGlkLCBwcm9wcyk7XG5cbiAgICBjb25zdCBnZXRTZWNyZXQgPSBuZXcgQXdzQ3VzdG9tUmVzb3VyY2UodGhpcywgJ0dldFNlY3JldCcsIHtcbiAgICAgIG9uVXBkYXRlOiB7XG4gICAgICAgIHNlcnZpY2U6ICdTU00nLFxuICAgICAgICBhY3Rpb246ICdHZXRQYXJhbWV0ZXInLFxuICAgICAgICBwYXJhbWV0ZXJzOiB7XG4gICAgICAgICAgTmFtZTogcHJvcHMucGFyYW1ldGVyTmFtZSxcbiAgICAgICAgICBXaXRoRGVjcnlwdGlvbjogdHJ1ZSxcbiAgICAgICAgfSxcbiAgICAgICAgcGh5c2ljYWxSZXNvdXJjZUlkOiBQaHlzaWNhbFJlc291cmNlSWQub2YocHJvcHMucGFyYW1ldGVyTmFtZSksXG4gICAgICAgIGxvZ2dpbmc6IExvZ2dpbmcud2l0aERhdGFIaWRkZW4oKSxcbiAgICAgIH0sXG4gICAgICBwb2xpY3k6IEF3c0N1c3RvbVJlc291cmNlUG9saWN5LmZyb21TZGtDYWxscyh7XG4gICAgICAgIHJlc291cmNlczogQXdzQ3VzdG9tUmVzb3VyY2VQb2xpY3kuQU5ZX1JFU09VUkNFLFxuICAgICAgfSksXG4gICAgfSk7XG5cbiAgICBjb25zdCB2YWx1ZSA9IGdldFNlY3JldC5nZXRSZXNwb25zZUZpZWxkKCdQYXJhbWV0ZXIuVmFsdWUnKTtcbiAgICBuZXcgQ2ZuT3V0cHV0KHRoaXMsICdSZXZlYWxTZWNyZXQnLCB7IHZhbHVlIH0pO1xuICB9XG59XG5cbmNvbnN0IGNyZWF0ZVBhcmFtZXRlclN0YWNrID0gbmV3IENyZWF0ZVBhcmFtZXRlclN0YWNrKGFwcCwgJ0NyZWF0ZVBhcmFtZXRlclN0YWNrJyk7XG5jb25zdCBnZXRQYXJhbWV0ZXJTdGFjayA9IG5ldyBHZXRQYXJhbWV0ZXJTdGFjayhhcHAsICdHZXRQYXJhbWV0ZXJTdGFjaycsIHtcbiAgcGFyYW1ldGVyTmFtZTogY3JlYXRlUGFyYW1ldGVyU3RhY2sucGFyYW1ldGVyTmFtZSxcbn0pO1xuXG5nZXRQYXJhbWV0ZXJTdGFjay5hZGREZXBlbmRlbmN5KGNyZWF0ZVBhcmFtZXRlclN0YWNrKTtcbkFzcGVjdHMub2YoZ2V0UGFyYW1ldGVyU3RhY2spLmFkZChjdXN0b21Bc3BlY3QuTm9kZUpzQXNwZWN0Lm1vZGlmeVJ1bnRpbWVUbyhSdW50aW1lLk5PREVKU18yMF9YKSk7XG5uZXcgSW50ZWdUZXN0KGFwcCwgJ0F3c0N1c3RvbVJlc291cmNlU3NtSW50ZWcnLCB7XG4gIHRlc3RDYXNlczogW2NyZWF0ZVBhcmFtZXRlclN0YWNrLCBnZXRQYXJhbWV0ZXJTdGFja10sXG59KTsiXX0=