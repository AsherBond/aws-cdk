"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const integ_tests_alpha_1 = require("@aws-cdk/integ-tests-alpha");
const aws_cdk_lib_1 = require("aws-cdk-lib");
const aws_ec2_1 = require("aws-cdk-lib/aws-ec2");
const customAspect = require("../lib/nodejs-aspect");
const aws_lambda_1 = require("aws-cdk-lib/aws-lambda");
const app = new aws_cdk_lib_1.App();
const stack = new aws_cdk_lib_1.Stack(app, 'integ-restrict-default-sg');
const vpc = new aws_ec2_1.Vpc(stack, 'Vpc', {
    restrictDefaultSecurityGroup: true,
});
const integ = new integ_tests_alpha_1.IntegTest(app, 'integ-test', {
    testCases: [stack],
    diffAssets: true,
});
const res = integ.assertions.awsApiCall('EC2', 'describeSecurityGroups', {
    GroupIds: [vpc.vpcDefaultSecurityGroup],
});
res.expect(integ_tests_alpha_1.ExpectedResult.objectLike({
    SecurityGroups: integ_tests_alpha_1.Match.arrayWith([integ_tests_alpha_1.Match.objectLike({
            Description: 'default VPC security group',
            GroupName: 'default',
            IpPermissions: [],
            IpPermissionsEgress: [],
        })]),
}));
aws_cdk_lib_1.Aspects.of(stack).add(customAspect.NodeJsAspect.modifyRuntimeTo(aws_lambda_1.Runtime.NODEJS_20_X));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZWcuYXNwZWN0LXN0YWNrLXNnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiaW50ZWcuYXNwZWN0LXN0YWNrLXNnLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsa0VBQThFO0FBQzlFLDZDQUFrRDtBQUNsRCxpREFBMEM7QUFDMUMscURBQXFEO0FBQ3JELHVEQUFpRDtBQUVqRCxNQUFNLEdBQUcsR0FBRyxJQUFJLGlCQUFHLEVBQUUsQ0FBQztBQUN0QixNQUFNLEtBQUssR0FBRyxJQUFJLG1CQUFLLENBQUMsR0FBRyxFQUFFLDJCQUEyQixDQUFDLENBQUM7QUFFMUQsTUFBTSxHQUFHLEdBQUcsSUFBSSxhQUFHLENBQUMsS0FBSyxFQUFFLEtBQUssRUFBRTtJQUNoQyw0QkFBNEIsRUFBRSxJQUFJO0NBQ25DLENBQUMsQ0FBQztBQUVILE1BQU0sS0FBSyxHQUFHLElBQUksNkJBQVMsQ0FBQyxHQUFHLEVBQUUsWUFBWSxFQUFFO0lBQzdDLFNBQVMsRUFBRSxDQUFDLEtBQUssQ0FBQztJQUNsQixVQUFVLEVBQUUsSUFBSTtDQUNqQixDQUFDLENBQUM7QUFFSCxNQUFNLEdBQUcsR0FBRyxLQUFLLENBQUMsVUFBVSxDQUFDLFVBQVUsQ0FBQyxLQUFLLEVBQUUsd0JBQXdCLEVBQUU7SUFDdkUsUUFBUSxFQUFFLENBQUMsR0FBRyxDQUFDLHVCQUF1QixDQUFDO0NBQ3hDLENBQUMsQ0FBQztBQUVILEdBQUcsQ0FBQyxNQUFNLENBQUMsa0NBQWMsQ0FBQyxVQUFVLENBQUM7SUFDbkMsY0FBYyxFQUFFLHlCQUFLLENBQUMsU0FBUyxDQUFDLENBQUMseUJBQUssQ0FBQyxVQUFVLENBQUM7WUFDaEQsV0FBVyxFQUFFLDRCQUE0QjtZQUN6QyxTQUFTLEVBQUUsU0FBUztZQUNwQixhQUFhLEVBQUUsRUFBRTtZQUNqQixtQkFBbUIsRUFBRSxFQUFFO1NBQ3hCLENBQUMsQ0FBQyxDQUFDO0NBQ0wsQ0FBQyxDQUFDLENBQUM7QUFFSixxQkFBTyxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsQ0FBQyxHQUFHLENBQUMsWUFBWSxDQUFDLFlBQVksQ0FBQyxlQUFlLENBQUMsb0JBQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXhwZWN0ZWRSZXN1bHQsIEludGVnVGVzdCwgTWF0Y2ggfSBmcm9tICdAYXdzLWNkay9pbnRlZy10ZXN0cy1hbHBoYSc7XG5pbXBvcnQgeyBTdGFjaywgQXBwLCBBc3BlY3RzIH0gZnJvbSAnYXdzLWNkay1saWInO1xuaW1wb3J0IHsgVnBjIH0gZnJvbSAnYXdzLWNkay1saWIvYXdzLWVjMic7XG5pbXBvcnQgKiBhcyBjdXN0b21Bc3BlY3QgZnJvbSAnLi4vbGliL25vZGVqcy1hc3BlY3QnO1xuaW1wb3J0IHsgUnVudGltZSB9IGZyb20gJ2F3cy1jZGstbGliL2F3cy1sYW1iZGEnO1xuXG5jb25zdCBhcHAgPSBuZXcgQXBwKCk7XG5jb25zdCBzdGFjayA9IG5ldyBTdGFjayhhcHAsICdpbnRlZy1yZXN0cmljdC1kZWZhdWx0LXNnJyk7XG5cbmNvbnN0IHZwYyA9IG5ldyBWcGMoc3RhY2ssICdWcGMnLCB7XG4gIHJlc3RyaWN0RGVmYXVsdFNlY3VyaXR5R3JvdXA6IHRydWUsXG59KTtcblxuY29uc3QgaW50ZWcgPSBuZXcgSW50ZWdUZXN0KGFwcCwgJ2ludGVnLXRlc3QnLCB7XG4gIHRlc3RDYXNlczogW3N0YWNrXSxcbiAgZGlmZkFzc2V0czogdHJ1ZSxcbn0pO1xuXG5jb25zdCByZXMgPSBpbnRlZy5hc3NlcnRpb25zLmF3c0FwaUNhbGwoJ0VDMicsICdkZXNjcmliZVNlY3VyaXR5R3JvdXBzJywge1xuICBHcm91cElkczogW3ZwYy52cGNEZWZhdWx0U2VjdXJpdHlHcm91cF0sXG59KTtcblxucmVzLmV4cGVjdChFeHBlY3RlZFJlc3VsdC5vYmplY3RMaWtlKHtcbiAgU2VjdXJpdHlHcm91cHM6IE1hdGNoLmFycmF5V2l0aChbTWF0Y2gub2JqZWN0TGlrZSh7XG4gICAgRGVzY3JpcHRpb246ICdkZWZhdWx0IFZQQyBzZWN1cml0eSBncm91cCcsXG4gICAgR3JvdXBOYW1lOiAnZGVmYXVsdCcsXG4gICAgSXBQZXJtaXNzaW9uczogW10sXG4gICAgSXBQZXJtaXNzaW9uc0VncmVzczogW10sXG4gIH0pXSksXG59KSk7XG5cbkFzcGVjdHMub2Yoc3RhY2spLmFkZChjdXN0b21Bc3BlY3QuTm9kZUpzQXNwZWN0Lm1vZGlmeVJ1bnRpbWVUbyhSdW50aW1lLk5PREVKU18yMF9YKSk7Il19